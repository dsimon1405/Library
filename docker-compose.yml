services:
  eureka-server:
    build:
      context: .
      target: eureka-server
    ports:
      - "8761:8761"
    environment:
      TZ: Europe/Moscow


  gateway:
    build:
      context: .
      target: gateway
    ports:
      - "8080:8080"
    environment:
      TZ: Europe/Moscow
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_started

  auth-service:
    build:
      context: .
      target: auth-service
    restart: on-failure
    ports:
      - "8083:8083"
    environment:
      TZ: Europe/Moscow
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/library_auth_db_docker
      SPRING_DATASOURCE_USERNAME: auth_acc
      SPRING_DATASOURCE_PASSWORD: auth_pass
    depends_on:
      eureka-server:
        condition: service_started
      mysql-db:
        condition: service_healthy

  lib-service:
    build:
      context: .
      target: lib-service
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      TZ: Europe/Moscow
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/library_lib_db_docker
      SPRING_DATASOURCE_USERNAME: lib_acc
      SPRING_DATASOURCE_PASSWORD: lib_pass
    depends_on:
      eureka-server:
        condition: service_started
      mysql-db:
        condition: service_healthy

  user-service:
    build:
      context: .
      target: user-service
    restart: on-failure
    ports:
      - "8082:8082"
    environment:
      TZ: Europe/Moscow
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/library_user_db_docker
      SPRING_DATASOURCE_USERNAME: user_acc
      SPRING_DATASOURCE_PASSWORD: user_pass
    depends_on:
      eureka-server:
        condition: service_started
      mysql-db:
        condition: service_healthy

  mysql-db:
    image: mysql:8.0
    environment:
      TZ: Europe/Moscow
      MYSQL_ROOT_PASSWORD: pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_library_data:/var/lib/mysql
      - ./docker-init.sql:/docker-entrypoint-initdb.d/docker-init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_library_data:
